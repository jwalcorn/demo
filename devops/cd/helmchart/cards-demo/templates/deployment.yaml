apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.microservice.Name }}
  name: {{ .Values.microservice.Name }}
  namespace: {{ .Values.microservice.namespace }}
spec:  
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.microservice.Name }}
        version: v1
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "9080"
    spec:
      imagePullSecrets:
      - name: {{ .Values.microservice.imageSecret }}
      containers:
      - env:
        - name: WLP_LOGGING_CONSOLE_SOURCE
          value: {{ .Values.microservice.wlpLoggingConsoleSource }}
        - name: WLP_LOGGING_CONSOLE_FORMAT
          value: {{ .Values.microservice.wlpLoggingConsoleFormat }}
        - name: WLP_LOGGING_CONSOLE_LOGLEVEL
          value: {{ .Values.microservice.wlpLoggingConsoleLoglevel }}
        - name: WLP_LOGGING_MESSAGE_FORMAT
          value: {{ .Values.microservice.wlpLoggingMessageLogFormat }}
        - name: ZIPKIN_HOST
          value: {{ .Values.microservice.zipkinHost }}
        - name: ZIPKIN_PORT
          value: "{{ .Values.microservice.zipkinPort }}"
        image: {{ .Values.microservice.image }}
        imagePullPolicy: {{ .Values.microservice.PullPolicy }}
        name: {{ .Values.microservice.Name }}
        ports:
        - containerPort: {{ .Values.microservice.containerport }}
        - containerPort: {{ .Values.microservice.containerporthttps }}
        resources: {}
        volumeMounts:
        - mountPath: /tmp/logs
          name: {{ .Values.microservice.Name }}-vol
        - mountPath: /opt/config
          name: config-volume
        envFrom:
        - configMapRef:
            name: {{ .Values.microservice.Name }}configmap  
      restartPolicy: Always
      volumes:
      - name: {{ .Values.microservice.Name }}-vol
        emptyDir: {}
      - name: config-volume
        configMap:
          name: {{ .Values.microservice.Name }}configmap
        
